service: payments-api

frameworkVersion: v3
useDotenv: true

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  lambdaHashingVersion: 20201221
  runtime: nodejs14.x
  stage: ${opt:stage, 'development'}
  region: ap-southeast-2
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    STAGE: ${env:STAGE}
    REGION: ${env:REGION}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [PaymentsTable, Arn]

functions:
  createPayment:
    description: Create payment
    handler: handler.api
    events:
      - http:
          path: /payments
          method: post
          cors: true

  updatePayment:
    description: Update payment
    handler: handler.api
    events:
      - http:
          path: /payments/{id}
          method: put
          cors: true

  getPayment:
    description: Get payment
    handler: handler.api
    events:
      - http:
          path: /payments/{id}
          method: get
          cors: true

  listPayments:
    description: List payments
    handler: handler.api
    events:
      - http:
          path: /payments
          method: get
          cors: true

  deletePayment:
    description: Delete payment
    handler: handler.api
    events:
      - http:
          path: /payments/{id}
          method: delete
          cors: true

custom:
  bundle:
    linting: false
  serverless-offline:
    httpPort: 2000
  tableName: "${sls:stage}_payments"
  dynamodb:
    stages:
      - development
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: false
      convertEmptyValues: true

resources:
  Resources:
    PaymentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
